<?xml version="1.0" encoding="UTF-8"?>
<Project>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(ProjectPackageDir)\MSBuild.Extension.Pack.1.9.1\build\net35\MSBuild.Extension.Pack.targets" Condition="Exists('$(ProjectPackageDir)\MSBuild.Extension.Pack.1.9.1\build\net35\MSBuild.Extension.Pack.targets')" />

  <ItemGroup>
    <Content Include="lib/*.LICENSE"/>
  </ItemGroup>

  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(ProjectPackageDir)\MSBuild.Extension.Pack.1.9.1\build\net35\MSBuild.Extension.Pack.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(ProjectPackageDir)s\MSBuild.Extension.Pack.1.9.1\build\net35\MSBuild.Extension.Pack.targets'))" />
  </Target>

  <Target Name="BeforeBuild">
    <ItemGroup>
      <AssemblyInfoFiles Include="Properties\AssemblyInfo.cs" />
    </ItemGroup>
    <Message Text="Applying properties and copying files..." />
    <Copy SourceFiles="@(Content)" DestinationFolder="$(OutDir)" />
    <MSBuild.ExtensionPack.Framework.AssemblyInfo
      Condition="$(Configuration)=='Debug'"
      AssemblyInfoFiles="@(AssemblyInfoFiles)"
      FirstDayOfWeek="Sunday"
      AssemblyFileBuildNumberType="YearWeekDay"/>
  </Target>

  <Target Name="AfterBuild">
    <PropertyGroup>
      <OutputZip>$(OutputPath)..\$(AssemblyName).zip</OutputZip>
    </PropertyGroup>
    <ItemGroup>
      <LicenseI Include="$(SolutionDir)/LICENSE" />
      <LicenseO Include="$(OutputPath)/$(AssemblyName).LICENSE" />
      <ResourceFiles Include="@(OutputFiles)" />
    </ItemGroup>
    <Copy SourceFiles="@(LicenseI)" DestinationFiles="@(LicenseO)" />
    <Copy
      SourceFiles="@(ResourceFiles)"
      DestinationFolder="$(OutputPath)\%(RecursiveDir)"
      SkipUnchangedFiles="True" />

    <Delete Condition="$(Configuration) == 'Release' AND Exists('$(OutputZip)')"
      Files="$(OutputZip)"/>
    <ZipDirectory Condition="$(Configuration) == 'Release'"
      DestinationFile="$(OutputZip)"
      SourceDirectory="$(OutputPath)"/>
  </Target>
</Project>
